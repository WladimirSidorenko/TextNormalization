#!/usr/bin/env python2.7
# -*- coding: utf-8; -*-

##################################################################
# Libraries
import sys
from alt_argparse import argparser
from alt_fileinput import AltFileInput
from ld import p2p

##################################################################
# Processing Arguments
# note: some options are already set up by alt_argparser
argparser.description='''Utility for mitigating noisiness in social media texts by replacing
difficult fragments with their normalized forms.'''
argparser.add_argument('-n', '--dont-remember', help="don't print replacement information
for further restoring", action='store_true')
argparser.add_file_argument('-m', '--map-file', \
                                help = 'file from which normalization rules are loaded', \
                                required = True)
args = argparser.parse_args()

##################################################################
# Main Body
flsh      = args.flush
skip_line = args.skip_line
remember  = not args.dont_remember
NORMALIZATION_P2P = p2p.P2P(args.map_file)
finput    = AltFileInput(*args.files)
replaced  = ()

for line in finput:
    if line != skip_line:
        line, replaced = NORMALIZATION_P2P.sub(line, remember = True)

    print line.encode('utf-8')
    if remember:
        for repl in replaced:
            print '\t', '\t'.join(repl).encode('utf-8')
        replaced = ()

    if flsh:
        sys.stdout.flush()
