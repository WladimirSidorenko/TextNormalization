#!/usr/bin/env python2.7

##################################################################
# Libraries
import sys
import re
from alt_argparse import argparser
from alt_fio import AltFileInput, AltFileOutput

##################################################################
# Constants
FS = re.compile(r'\t')
UNK_ID_PRFX = "unknown_"
UNK_TIME    = "unknown"

##################################################################
# Variables
t_id = t_time = t_text = None
fields = []
unk_msg_cnt = 0

##################################################################
# Functions

##################################################################
# Arguments
argparser.description="""Utility for converting tweets represented as 3-field
tab-separated values into xml format."""
args = argparser.parse_args()

# establish input/output utilities
foutput = AltFileOutput(flush = args.flush)
finput  = AltFileInput(*args.files, skip_line = args.skip_line, \
                            print_func = foutput.fprint)

##################################################################
# Main
# care of encoding/decoding, as well as skipping lines and XML markup will be
# taken in finput and foutput internals
foutput.fprint("<messages>")

for line in finput:
    # skip empty lines
    if not line:
        foutput.fprint(line)
        continue

    # split nion-empty lines on tabs
    fields = FS.split(line)
    # if line seems to have a tsv format, then generate an XML tag
    if len(fields) == 3:
        t_id, t_time, line = fields
    else:
        t_id = UNK_ID_PRFX + str(unk_msg_cnt)
        t_time = UNK_TIME
        unk_msg_cnt += 1

    foutput.fprint("<msg id=\"{}\" time=\"{}\">".format(t_id, t_time))
    foutput.fprint(line)
    foutput.fprint("</msg>")

foutput.fprint("</messages>")
